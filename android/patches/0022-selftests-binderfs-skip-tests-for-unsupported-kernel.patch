From 57b74c1b318625057398ccbe479a157507488d8c Mon Sep 17 00:00:00 2001
From: Carlos Llamas <cmllamas@google.com>
Date: Tue, 14 Dec 2021 05:58:48 +0000
Subject: [PATCH] selftests/binderfs: skip tests for unsupported kernels

Binderfs was first introduced in Linux 5.0 release, so we need to skip
these tests for older kernels. Also, we force a successful exit as the
current framework doesn't handle KSFT_SKIP return codes.

Signed-off-by: Carlos Llamas <cmllamas@google.com>
---
 .../filesystems/binderfs/binderfs_test.c      | 28 +++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/tools/testing/selftests/filesystems/binderfs/binderfs_test.c b/tools/testing/selftests/filesystems/binderfs/binderfs_test.c
index 8c2ed962e1c7..be5a8f446066 100644
--- a/tools/testing/selftests/filesystems/binderfs/binderfs_test.c
+++ b/tools/testing/selftests/filesystems/binderfs/binderfs_test.c
@@ -12,6 +12,7 @@
 #include <sys/mount.h>
 #include <sys/stat.h>
 #include <sys/types.h>
+#include <sys/utsname.h>
 #include <unistd.h>
 #include <linux/android/binder.h>
 #include <linux/android/binderfs.h>
@@ -267,8 +268,35 @@ static void binderfs_test_unprivileged()
 	__do_binderfs_test();
 }
 
+/* binderfs first introduced in Linux 5.0 */
+bool binderfs_supported(void)
+{
+	const int min_kernel_version = 5;
+	struct utsname utsname;
+	int ret, version;
+
+	ret = uname(&utsname);
+	if (ret)
+		ksft_exit_fail_msg("%s - Failed to get kernel version\n",
+				   strerror(errno));
+
+	ret = sscanf(utsname.release, "%d.", &version);
+	if (ret != 1)
+		ksft_exit_fail_msg("%s - Failed to parse uname: %s\n",
+				   strerror(errno), utsname.release);
+
+	return version >= min_kernel_version? true: false;
+}
+
+
 int main(int argc, char *argv[])
 {
+	/* Force success exit for older kernels */
+	if (!binderfs_supported()) {
+		ksft_print_msg("Skipping tests - binderfs not supported\n");
+		ksft_exit_pass();
+	}
+
 	binderfs_test_privileged();
 	binderfs_test_unprivileged();
 	ksft_exit_pass();
-- 
2.34.1.173.g76aa8bc2d0-goog

